data <- read.csv('d:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv', header = TRUE)
X <- data[1:22]
x <- 4
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_dir <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = F)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sqrt = array(data = 0, dim = reps)
NMI_min  = array(data = 0, dim = reps)
NMI_max  = array(data = 0, dim = reps)
NMI_sum  = array(data = 0, dim = reps)
write.table(list("type", "mean NMI_sum", "run-time"), result_arbitrary_file, row.names = F, col.names = F, sep = ',')
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = T)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sqrt = array(data = 0, dim = reps)
NMI_min  = array(data = 0, dim = reps)
NMI_max  = array(data = 0, dim = reps)
NMI_sum  = array(data = 0, dim = reps)
write.table(list("type", "mean NMI_sum", "run-time"), res_anuran_data_file, row.names = F, col.names = F, sep = ',')
size(X)
dim(X)
head(X)
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = T)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sum_species  = array(data = 0, dim = reps)
NMI_sum_genus    = array(data = 0, dim = reps)
NMI_sum_families = array(data = 0, dim = reps)
write.table(list("Class type", "mean NMI_sum", "run-time"), res_anuran_data_file, row.names = F, col.names = F, sep = ',')
tic()
for (i in 1:reps) {
# run the CLIQUE algorithm
res <- CLIQUE(X, xi = 50, tau = 0.2)
# initialize predLab array
predLab <- array(data=0, dim=dim(X)[1])
# generate predicted labels from clustering result
for(i in 1:length(res)){ predLab[res[[i]]$objects] = i}
# contingency matrix
t_species  <- table(true_species, predLab)
t_genus    <- table(true_genus, predLab)
t_families <- table(true_families, prefLab)
nmi_species  <- get_NMI(t_species)
nmi_genus    <- get_NMI(t_genus)
nmi_families <- get_NMI(t_families)
NMI_sum_species[k]  = nmi_species[4]
NMI_sum_genus[k]    = nmi_genus[4]
NMI_sum_families[k] = nmi_families[4]
cat("Reps =", k, "\n")
}
toc_obj = toc()
avg_time = (toc_obj$toc - toc_obj$tic)[[1]]
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = T)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sum_species  = array(data = 0, dim = reps)
NMI_sum_genus    = array(data = 0, dim = reps)
NMI_sum_families = array(data = 0, dim = reps)
write.table(list("Class type", "mean NMI_sum", "run-time"), res_anuran_data_file, row.names = F, col.names = F, sep = ',')
tic()
for (i in 1:reps) {
# run the CLIQUE algorithm
res <- CLIQUE(X, xi = 50, tau = 0.2)
# initialize predLab array
predLab <- array(data=0, dim=dim(X)[1])
# generate predicted labels from clustering result
for(i in 1:length(res)){ predLab[res[[i]]$objects] = i}
# contingency matrix
t_species  <- table(true_species, predLab)
t_genus    <- table(true_genus, predLab)
t_families <- table(true_families, predLab)
nmi_species  <- get_NMI(t_species)
nmi_genus    <- get_NMI(t_genus)
nmi_families <- get_NMI(t_families)
NMI_sum_species[k]  = nmi_species[4]
NMI_sum_genus[k]    = nmi_genus[4]
NMI_sum_families[k] = nmi_families[4]
cat("Reps =", k, "\n")
}
toc_obj = toc()
avg_time = (toc_obj$toc - toc_obj$tic)[[1]]
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = T)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sum_species  = array(data = 0, dim = reps)
NMI_sum_genus    = array(data = 0, dim = reps)
NMI_sum_families = array(data = 0, dim = reps)
write.table(list("Class type", "mean NMI_sum", "run-time"), res_anuran_data_file, row.names = F, col.names = F, sep = ',')
tic()
for (i in 1:reps) {
# run the CLIQUE algorithm
res <- CLIQUE(X, xi = 50, tau = 0.2)
# initialize predLab array
predLab <- array(data=0, dim=dim(X)[1])
# generate predicted labels from clustering result
for(i in 1:length(res)){ predLab[res[[i]]$objects] = i}
# contingency matrix
t_species  <- table(true_species, predLab)
t_genus    <- table(true_genus, predLab)
t_families <- table(true_families, predLab)
nmi_species  <- get_NMI(t_species)
nmi_genus    <- get_NMI(t_genus)
nmi_families <- get_NMI(t_families)
NMI_sum_species[k]  = nmi_species[4]
NMI_sum_genus[k]    = nmi_genus[4]
NMI_sum_families[k] = nmi_families[4]
cat("Reps =", i, "\n")
}
toc_obj = toc()
avg_time = (toc_obj$toc - toc_obj$tic)[[1]]
## SCRIPT TO RUN CLIQUE CLUSTERING ON ANURAN CALLS DATASET
library(subspace)
library(tictoc)
set.seed(12345)
# include get_NMI.R script
source('D://subspace_synData//subspace_synthetic_data_generator//src//R_scripts//synthetic_data//get_NMI.R')
res_anuran_data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/results/CLIQUE/results.csv'
data_file <- 'd:/subspace_datasets/real_data/Anuran_calls_data/Frogs_MFCCs.csv'
data <- read.csv(data_file, header = T)
# extract species, genus and families labels
true_species  <- data[, ncol(data)-1]
true_genus    <- data[, ncol(data)-2]
true_families <- data[, ncol(data)-3]
# Extract the data
X <- data[, 1:22]
# Min-max normalize the data
X <- apply(t(X), 1, function(x)(x-min(x))/(max(x)-min(x)))
# Replace NA's with 0
X[is.na(X)] <- 0
# number of repetitions
reps = 100
# arrays to store the results
NMI_sum_species  = array(data = 0, dim = reps)
NMI_sum_genus    = array(data = 0, dim = reps)
NMI_sum_families = array(data = 0, dim = reps)
write.table(list("Class type", "mean NMI_sum", "run-time"), res_anuran_data_file, row.names = F, col.names = F, sep = ',')
tic()
for (k in 1:reps) {
# run the CLIQUE algorithm
res <- CLIQUE(X, xi = 50, tau = 0.2)
# initialize predLab array
predLab <- array(data=0, dim=dim(X)[1])
# generate predicted labels from clustering result
for(i in 1:length(res)){ predLab[res[[i]]$objects] = i}
# contingency matrix
t_species  <- table(true_species, predLab)
t_genus    <- table(true_genus, predLab)
t_families <- table(true_families, predLab)
nmi_species  <- get_NMI(t_species)
nmi_genus    <- get_NMI(t_genus)
nmi_families <- get_NMI(t_families)
NMI_sum_species[k]  = nmi_species[4]
NMI_sum_genus[k]    = nmi_genus[4]
NMI_sum_families[k] = nmi_families[4]
cat("Reps =", k, "\n")
}
toc_obj = toc()
avg_time = (toc_obj$toc - toc_obj$tic)[[1]]
